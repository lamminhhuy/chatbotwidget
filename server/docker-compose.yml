services:
  chatbot-server:
    build:
      context: ./ 
      dockerfile: Dockerfile
    container_name: chatbot-server
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - NODE_ENV=dev
      - REDIS_URL=redis://chatbot-redis:6379
      - MONGO_URI=mongodb://chatbot-mongo:27017/chatbotdb?retryWrites=true&w=majority
    depends_on:
      chatbot-redis:
        condition: service_healthy
      chatbot-mongo:
        condition: service_healthy
    volumes:
      - ./:/app            
      - /app/node_modules
    networks:
      - app-network
    entrypoint: ["sh", "-c", "npx wait-on tcp:chatbot-mongo:27017 tcp:chatbot-redis:6379 && yarn build && node migrations/migrate.js && node dist/main/index.cjs"]

  chatbot-redis:
    image: redis:latest
    container_name: chatbot-redis
    ports:
      - "6379:6379"          
    networks:
      - app-network 
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
      timeout: 3s

  chatbot-mongo:
    image: mongo:latest
    container_name: chatbot-mongo
    restart: always
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - chatbot-mongo-data:/data/db
    command: mongod --setParameter enableTestCommands=1
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping')"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
  chatbot-mongo-express:
    image: mongo-express
    container_name: chatbot-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=chatbot-mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      chatbot-mongo:
        condition: service_healthy
    networks:
      - app-network 

networks:
  app-network:
    driver: bridge

volumes:
  chatbot-mongo-data:
